#debug=true
server.port=8081
logging.level.*=info

########################################################
####  ˝æ›ø‚≈‰÷√
########################################################
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/my_demo?useSSL=false&useUnicode=true&characterEncoding=gbk&zeroDateTimeBehavior=convertToNull
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

########################################################
#### Enable JPA repositories.
########################################################
spring.data.jpa.repositories.enabled=true
# Target database to operate on, auto-detected by default. Can be alternatively set using the "databasePlatform" property.
spring.jpa.database=mysql
# Name of the target database to operate on, auto-detected by default. Can be alternatively set using the "Database" enum.
#spring.jpa.database-platform=ORACLE
# Initialize the schema on startup.
spring.jpa.generate-ddl=true
# DDL mode. This is actually a shortcut for the "hibernate.hbm2ddl.auto" property. Default to "create-drop" when using an embedded database, "none" otherwise.
spring.jpa.hibernate.ddl-auto=update
# Hibernate 5 implicit naming strategy fully qualified name.
#spring.jpa.hibernate.naming.implicit-strategy=
# Hibernate 5 physical naming strategy fully qualified name.
#spring.jpa.hibernate.naming.physical-strategy=
# Hibernate 4 naming strategy fully qualified name. Not supported with Hibernate 5.
spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy
# Use Hibernate's newer IdentifierGenerator for AUTO, TABLE and SEQUENCE.
#spring.jpa.hibernate.use-new-id-generator-mappings=
# Register OpenEntityManagerInViewInterceptor. Binds a JPA EntityManager to the thread for the entire processing of the request.
spring.jpa.open-in-view=true
# Additional native properties to set on the JPA provider.
#spring.jpa.properties.*=
# Enable logging of SQL statements.
spring.jpa.show-sql=true


# ----------------------------------------
# SECURITY PROPERTIES
# ----------------------------------------
# SECURITY (SecurityProperties)
# Security authorize mode to apply.
security.basic.authorize-mode=role
# Enable basic authentication.
security.basic.enabled=true
# Comma-separated list of paths to secure.
security.basic.path=/**
# HTTP basic realm name.
security.basic.realm=Spring
# Enable Cross Site Request Forgery support.
security.enable-csrf=false
# Security filter chain order.
security.filter-order=0
# Security filter chain dispatcher types.
security.filter-dispatcher-types=ASYNC, FORWARD, INCLUDE, REQUEST
# Enable cache control HTTP headers.
security.headers.cache=true
# Enable "X-Content-Type-Options" header.
security.headers.content-type=true
# Enable "X-Frame-Options" header.
security.headers.frame=true
# HTTP Strict Transport Security (HSTS) mode (none, domain, all).
#security.headers.hsts=
# Enable cross site scripting (XSS) protection.
security.headers.xss=true
# Comma-separated list of paths to exclude from the default secured paths.
#security.ignored=
# Enable secure channel for all requests.
security.require-ssl=false
# Session creation policy (always, never, if_required, stateless).
security.sessions=stateless

# Default user name.
security.user.name=admin
# Password for the default user name. A random password is logged on startup by default.
security.user.password=secret
# Granted roles for the default user name.
security.user.role=SUPERUSER

# SECURITY OAUTH2 CLIENT (OAuth2ClientProperties)
# OAuth2 client id.
#security.oauth2.client.client-id=
# OAuth2 client secret. A random secret is generated by default
#security.oauth2.client.client-secret=

# SECURITY OAUTH2 RESOURCES (ResourceServerProperties)
# Identifier of the resource.
#security.oauth2.resource.id=
# The URI of the JWT token. Can be set if the value is not available and the key is public.
#security.oauth2.resource.jwt.key-uri=
# The verification key of the JWT token. Can either be a symmetric secret or PEM-encoded RSA public key.
#security.oauth2.resource.jwt.key-value=
# Use the token info, can be set to false to use the user info.
security.oauth2.resource.prefer-token-info=true
#
security.oauth2.resource.service-id=resource
# URI of the token decoding endpoint.
#security.oauth2.resource.token-info-uri=
# The token type to send when using the userInfoUri.
#security.oauth2.resource.token-type=
# URI of the user endpoint.
#security.oauth2.resource.user-info-uri=

# SECURITY OAUTH2 SSO (OAuth2SsoProperties)
# Filter order to apply if not providing an explicit WebSecurityConfigurerAdapter
#security.oauth2.sso.filter-order=
# Path to the login page, i.e. the one that triggers the redirect to the OAuth2 Authorization Server
security.oauth2.sso.login-path=/login
